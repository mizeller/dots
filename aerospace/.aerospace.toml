# source:       https://github.com/eljobe/dotfiles
# inspired by:  https://discord.com/channels/1005603569187160125/1305084722103193653


# Start AeroSpace at login
start-at-login = true

# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',
  'exec-and-forget open -a /Applications/Vivaldi.app', 'move-node-to-workspace 1',
  'exec-and-forget open -a /Applications/Ghostty.app', 'move-node-to-workspace 2',
]
exec-on-workspace-change = [
    '/bin/zsh',
    '-c',
    'sketchybar --trigger aerospace_workspace_change AEROSPACE_FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE AEROSPACE_PREV_WORKSPACE=$AEROSPACE_PREV_WORKSPACE',
]

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
accordion-padding = 30

default-root-container-layout = 'tiles'     # tiles|accordion
default-root-container-orientation = 'auto' # horizontal|vertical|auto

# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty' # qwerty|dvorak

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
# on-focus-changed = ['exec-and-forget $HOME/.config/aerospace/aero-focus.sh'] # unused

on-focus-changed = [
    'move-mouse window-lazy-center', # mouse follows focus
    'exec-and-forget sketchybar --trigger aerospace_focus_change', # update sketchybar when focus changes, not jus when workspace changes
]


# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 12
inner.vertical = 12
outer.left = 10
outer.bottom = 10
outer.top = [{ monitor."built-in" = 13 }, 47]
outer.right = 10

# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.main.binding] # this mode is required!

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# SHORT-CUTS IN `MAIN` MODE
# See: https://nikitabobko.github.io/AeroSpace/commands#mode
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

alt-shift-semicolon = 'mode service'
alt-ctrl-f = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

cmd-h = []     # Disable "hide application"
cmd-alt-h = [] # Disable "hide others"

# short-cuts to open apps
# alt-c = 'exec-and-forget open -a /Applications/Visual Studio Code.app'
alt-g = 'exec-and-forget open -a /Applications/Ghostty.app'
alt-p = 'exec-and-forget open -a /Applications/Keynote.app'
alt-v = 'exec-and-forget open -a /Applications/Vivaldi.app'
# alt-c = 'exec-and-forget open -a /Applications/Visual\ Studio\ Code.app'
# alt-s = 'exec-and-forget open -a /Applications/Slack.app'
# alt-s = 'exec-and-forget open -a /Applications/Spotify.app'
# alt-n = 'exec-and-forget open -a /Applications/Notion.app'
# alt-w = 'exec-and-forget open -a /Applications/Whatsapp.app'
alt-z = 'exec-and-forget open -a /Applications/Zed.app'

# change between floating and tiling layout
ctrl-shift-f = 'layout floating tiling'
# ctrl-shift-t = 'layout tiling'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-shift-slash = 'layout accordion horizontal vertical'


# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
# Go To Workspace X
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
# Move Active Window to X
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'


# Move window to other monitor
alt-shift-m = 'move-node-to-monitor --wrap-around next --focus-follows-window'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
# Move Active Window to Workspace X
alt-shift-1 = [
    'move-node-to-workspace 1 --focus-follows-window',
    'layout tiling',
]
alt-shift-2 = [
    'move-node-to-workspace 2 --focus-follows-window',
    'layout tiling',
]
alt-shift-3 = [
    'move-node-to-workspace 3 --focus-follows-window',
    'layout tiling',
]
alt-shift-4 = [
    'move-node-to-workspace 4 --focus-follows-window',
    'layout tiling',
]
alt-shift-5 = [
    'move-node-to-workspace 5 --focus-follows-window',
    'layout tiling',
]
# alt-shift-e = 'exec-and-forget $HOME/.config/aerospace/make_floating.sh'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -100'
alt-shift-equal = 'resize smart +100'


# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-tab = 'workspace-back-and-forth' # 'workspace next --wrap-around'
# alt-shift-tab = 'workspace prev --wrap-around' # 'move-workspace-to-monitor --wrap-around next'
cmd-alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'


[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
    'layout floating tiling',
    'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-left = ['join-with left', 'mode main']
alt-down = ['join-with down', 'mode main']
alt-up = ['join-with up', 'mode main']
alt-right = ['join-with right', 'mode main']


# Automatically move apps to corresponding workspaces!

# This is the desired workspace set-up (for now):
# {
# - 1: { VSCode | Vivaldi }
# - 2: { WhatsApp | Spotify }
# - 3: { Slack | Notion }
# - 4: { Ghostty }
# - 5: { - }
# - W: { currently active workspace } ; convenient short-cut on QUERTY keyboard
# - E: { floating workspace; whichever windows are moved here, become floating} ; quite convenient sometime
# - Finder Windows Floating by default
# }

[[on-window-detected]]
if.app-id = 'dev.zed.Zed'
run = "move-node-to-workspace 1"

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = "move-node-to-workspace 1"

[[on-window-detected]]
if.app-id = 'com.vivaldi.Vivaldi'
run = "move-node-to-workspace 1"

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = "move-node-to-workspace 3"

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = "move-node-to-workspace 3"

# [[on-window-detected]]
# if.app-id = 'notion.id'
# run = "move-node-to-workspace 3"

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = "move-node-to-workspace 3"

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = ['layout tiling', 'move-node-to-workspace 2']

[[on-window-detected]]
if.app-id = 'com.philandro.anydesk'
run = ['layout tiling', 'move-node-to-workspace 5']

[[on-window-detected]]
if.app-name-regex-substring = 'finder'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.cisco.secureclient.gui'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'claude'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'zoom'
run = 'layout floating'

[[on-window-detected]]
if.window-title-regex-substring = 'gloss'
run = 'layout floating'
